name: Auto Build and Publish Maturin Wheels

on:
  push:
    branches:
      - main  # trigger otomatis saat push ke main
  workflow_dispatch: # bisa dijalankan manual juga

permissions:
  contents: write

jobs:
  bump-tag:
    name: Bump Tag Automatically
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.set_tag.outputs.new_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # pastikan semua history dan tag tersedia

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_latest
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Increment patch version and push tag
        id: set_tag
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST_TAG#v}"
          PATCH=$((PATCH+1))
          NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
          echo "New tag: $NEW_TAG"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $NEW_TAG
          git push https://$PAT_TOKEN@github.com/herros27/validation_semantic.git $NEW_TAG

          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

  build:
    name: Build Wheels
    runs-on: ${{ matrix.os }}
    needs: bump-tag
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install maturin
        run: pip install maturin

      - name: Build wheel
        run: maturin build --release --features python_bindings_feature

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: maturin-wheel-${{ matrix.os }}
          path: target/wheels/*.whl

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List downloaded files
        run: ls -R dist

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          pip install twine
          twine upload --repository-url https://test.pypi.org/legacy/ dist/**/*.whl
